# Generated by Django 2.2.24 on 2021-08-12 16:22

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('judge', '0141_add_model_tag'),
    ]

    operations = [
        migrations.AlterField(
            model_name='comment',
            name='page',
            field=models.CharField(db_index=True, max_length=30, validators=[django.core.validators.RegexValidator('^\\w+:[a-z0-9A-Z_]+$', 'Page code must be ^\\w+:[a-z0-9A-Z_]+$')], verbose_name='associated page'),
        ),
        migrations.AlterField(
            model_name='commentlock',
            name='page',
            field=models.CharField(db_index=True, max_length=30, validators=[django.core.validators.RegexValidator('^\\w+:[a-z0-9A-Z_]+$', 'Page code must be ^\\w+:[a-z0-9A-Z_]+$')], verbose_name='associated page'),
        ),
        migrations.AlterField(
            model_name='problemdata',
            name='checker',
            field=models.CharField(blank=True, choices=[('standard', 'Standard'), ('bridged', 'Custom checker'), ('floats', 'Floats'), ('floatsabs', 'Floats (absolute)'), ('floatsrel', 'Floats (relative)'), ('identical', 'Byte identical'), ('linecount', 'Line-by-line')], max_length=10, verbose_name='checker'),
        ),
        migrations.AlterField(
            model_name='problemtestcase',
            name='checker',
            field=models.CharField(blank=True, choices=[('standard', 'Standard'), ('bridged', 'Custom checker'), ('floats', 'Floats'), ('floatsabs', 'Floats (absolute)'), ('floatsrel', 'Floats (relative)'), ('identical', 'Byte identical'), ('linecount', 'Line-by-line')], max_length=10, verbose_name='checker'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='code',
            field=models.CharField(db_index=True, max_length=30, unique=True, verbose_name='Tag ID'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(db_index=True, max_length=100, verbose_name='Tag name'),
        ),
        migrations.AlterField(
            model_name='tagproblem',
            name='code',
            field=models.CharField(db_index=True, help_text='A short, unique code for the problem, used in the url after /tag/', max_length=32, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9_]+$', 'Problem code must be ^[a-zA-Z0-9_]+$')], verbose_name='problem code'),
        ),
        migrations.AlterField(
            model_name='tagproblem',
            name='judge',
            field=models.CharField(blank=True, db_index=True, help_text='Original OJ of the problem', max_length=30, null=True, verbose_name='Online Judge'),
        ),
        migrations.AlterField(
            model_name='tagproblem',
            name='name',
            field=models.CharField(db_index=True, help_text='The full name of the problem, as shown in the problem list.', max_length=100, verbose_name='problem name'),
        ),
    ]
