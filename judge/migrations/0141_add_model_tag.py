# Generated by Django 2.2.24 on 2021-08-11 12:18

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('judge', '0140_problem_banned_judges'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True, verbose_name='Tag ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tag name')),
            ],
        ),
        migrations.CreateModel(
            name='TagData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TagGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True, verbose_name='Tag group ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tag group name')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='banned_tagging',
            field=models.BooleanField(default=False, help_text='User will not be allowed to tag problems.', verbose_name='banned tagging'),
        ),
        migrations.CreateModel(
            name='TagProblem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='A short, unique code for the problem, used in the url after /tag/', max_length=32, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9_]+$', 'Problem code must be ^[a-zA-Z0-9_]+$')], verbose_name='problem code')),
                ('name', models.CharField(help_text='The full name of the problem, as shown in the problem list.', max_length=100, verbose_name='problem name')),
                ('link', models.URLField(help_text='Full URL to the problem.', verbose_name='Problem URL')),
                ('judge', models.CharField(blank=True, help_text='Original OJ of the problem', max_length=30, null=True, verbose_name='Online Judge')),
                ('tag', models.ManyToManyField(related_name='tags', through='judge.TagData', to='judge.Tag', verbose_name='Tag')),
            ],
        ),
        migrations.AddField(
            model_name='tagdata',
            name='assigner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.Profile', verbose_name='Assigner'),
        ),
        migrations.AddField(
            model_name='tagdata',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.TagProblem'),
        ),
        migrations.AddField(
            model_name='tagdata',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.Tag', verbose_name='Tag'),
        ),
        migrations.AddField(
            model_name='tag',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='judge.TagGroup', verbose_name='Parent tag group'),
        ),
        migrations.AlterUniqueTogether(
            name='tagdata',
            unique_together={('tag', 'problem')},
        ),
    ]
